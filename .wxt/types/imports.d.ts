// Generated by wxt
export {}
declare global {
  const ChipGroup: typeof import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/components/ChipGroup')['ChipGroup']
  const ChipOption: typeof import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/ChipOption')['ChipOption']
  const ClearUsername: typeof import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/UsernameManager')['ClearUsername']
  const ContentScriptContext: typeof import('wxt/utils/content-script-context')['ContentScriptContext']
  const GetUsername: typeof import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/UsernameManager')['GetUsername']
  const InvalidMatchPattern: typeof import('wxt/utils/match-patterns')['InvalidMatchPattern']
  const MatchPattern: typeof import('wxt/utils/match-patterns')['MatchPattern']
  const SetClipboardValue: typeof import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/ClipboardManager')['SetClipboardValue']
  const StoreUsername: typeof import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/UsernameManager')['StoreUsername']
  const UsernameForm: typeof import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/components/UsernameForm')['UsernameForm']
  const ValidateUsername: typeof import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/UsernameManager')['ValidateUsername']
  const browser: typeof import('wxt/browser')['browser']
  const createIframeUi: typeof import('wxt/utils/content-script-ui/iframe')['createIframeUi']
  const createIntegratedUi: typeof import('wxt/utils/content-script-ui/integrated')['createIntegratedUi']
  const createShadowRootUi: typeof import('wxt/utils/content-script-ui/shadow-root')['createShadowRootUi']
  const darkTheme: typeof import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/Theme')['darkTheme']
  const defineAppConfig: typeof import('wxt/utils/define-app-config')['defineAppConfig']
  const defineBackground: typeof import('wxt/utils/define-background')['defineBackground']
  const defineContentScript: typeof import('wxt/utils/define-content-script')['defineContentScript']
  const defineUnlistedScript: typeof import('wxt/utils/define-unlisted-script')['defineUnlistedScript']
  const defineWxtPlugin: typeof import('wxt/utils/define-wxt-plugin')['defineWxtPlugin']
  const fakeBrowser: typeof import('wxt/testing')['fakeBrowser']
  const injectScript: typeof import('wxt/utils/inject-script')['injectScript']
  const storage: typeof import('wxt/utils/storage')['storage']
  const useAppConfig: typeof import('wxt/utils/app-config')['useAppConfig']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useEffect: typeof import('react')['useEffect']
  const useMemo: typeof import('react')['useMemo']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useState: typeof import('react')['useState']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Browser } from 'wxt/browser'
  import('wxt/browser')
  // @ts-ignore
  export type { StorageArea, WxtStorage, WxtStorageItem, StorageItemKey, StorageAreaChanges, MigrationError } from 'wxt/utils/storage'
  import('wxt/utils/storage')
  // @ts-ignore
  export type { WxtWindowEventMap } from 'wxt/utils/content-script-context'
  import('wxt/utils/content-script-context')
  // @ts-ignore
  export type { IframeContentScriptUi, IframeContentScriptUiOptions } from 'wxt/utils/content-script-ui/iframe'
  import('wxt/utils/content-script-ui/iframe')
  // @ts-ignore
  export type { IntegratedContentScriptUi, IntegratedContentScriptUiOptions } from 'wxt/utils/content-script-ui/integrated'
  import('wxt/utils/content-script-ui/integrated')
  // @ts-ignore
  export type { ShadowRootContentScriptUi, ShadowRootContentScriptUiOptions } from 'wxt/utils/content-script-ui/shadow-root'
  import('wxt/utils/content-script-ui/shadow-root')
  // @ts-ignore
  export type { ContentScriptUi, ContentScriptUiOptions, ContentScriptOverlayAlignment, ContentScriptAppendMode, ContentScriptInlinePositioningOptions, ContentScriptOverlayPositioningOptions, ContentScriptModalPositioningOptions, ContentScriptPositioningOptions, ContentScriptAnchoredOptions, AutoMountOptions, StopAutoMount, AutoMount } from 'wxt/utils/content-script-ui/types'
  import('wxt/utils/content-script-ui/types')
  // @ts-ignore
  export type { WxtAppConfig } from 'wxt/utils/define-app-config'
  import('wxt/utils/define-app-config')
  // @ts-ignore
  export type { ScriptPublicPath, InjectScriptOptions } from 'wxt/utils/inject-script'
  import('wxt/utils/inject-script')
  // @ts-ignore
  export type { ChipOption } from '/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/ChipOption'
  import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/ChipOption')
  // @ts-ignore
  export type { Selectable } from '/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/Selectable'
  import('/Users/jamie/Workspace/Experiments/d2_bot_commands/src/utils/Selectable')
}
